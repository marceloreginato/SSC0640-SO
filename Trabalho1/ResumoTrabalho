Resumo funcionamento:

- Rank 0 cria as threads;
- Rank 4 e 3 determinam os slots disponíveis para receber canetas;
- Quando a capacidade máxima de Rank 4 é atingida: Rank 1 e 2 são suspensos(Rank 3 verifica Rank 4 e controla
  Rank 1 e 2 a partir disso);
- Cada caneta produzida no Rank 2 é enviada ao Rank 4;
- Rank 4 armazena até o Rank 5 pedir a compra;
- Se o pedido for atendido corretamente, ok, se não houver canetas o suficiente, é enviado o que tem no armazenamento,
  se houver 0 canetas é enviada uma mensagem ao comprador (Rank 5);
- Quando Rank 5 recebe o pedido, ele avisa o Rank 0;
- A aplicação termina quando não há matéria prima no Rank 1 e não há canetas no Rank 4;
- As saídas devem ser impressas para verificar a execução do programa e só podem ser feitas pelo Rank 0.

Feito por Guilherme Fincatti e digitalizado por Marcelo Reginato.

/********************* Definição dos Semáforos ************************/
* Depósito de Canetas (Rank 4)
  * available (armazena a quantidade de slots disponíveis "semáforo contador") -> indica quando acaba os slots disponíveis -> Controle precisa barrar a transferência de matéria prima, a fabrição de caneta e a transferência de caneta

* Controle (Rank 3)
  * available -> espera ser notificado que zerou
  * go1 (dependente de "available"("mutex")) -> indica que o rank1 pode funcionar -> enviando matéria prima para o rank2
  * go2 (dependente de "available"("mutex")) -> indica que o rank2 pode funcionar -> enviando caneta para o rank3

* Depósito de Matéria Prima (Rank 1)
  * go1
  * full (armazena a quantidade de matéria prima no rank1 ("semáforo contador")) -> a cada transferência para o rank2, subtrai int02 da quantidade atual -> quando chegar em 0, sinaliza para o criador para finalizar a aplicação

* Célula de Fabricação (Rank 2)
  * go2

* Comprador (Rank 5)
  * 